{"version":3,"sources":["images/Rick_and_Morty_-_logo.png","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","App.js","services/fetchCharacters.js","index.js"],"names":["module","exports","Filters","props","getCharacters","findCharacter","className","htmlFor","id","name","type","value","onChange","CharacterCard","character","species","style","backgroundImage","image","src","alt","CharacterList","characters","filter","myCharacter","toUpperCase","includes","map","key","to","CharacterDetail","match","characterId","parseInt","params","characterFind","find","origin","episode","status","length","Fragment","App","state","bind","fetch","then","response","json","data","setState","results","event","currentTarget","this","logo","exact","path","render","RouterProps","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.beae1e19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo.75509f2e.png\";","import React from 'react';\nimport './Filters.scss';\nimport PropTypes from 'prop-types';\n\nconst Filters = props => {\n  const { getCharacters, findCharacter } = props\n  return(\n    <div className=\"filters__container\" >\n      <label className=\"filters__label\" htmlFor=\"name\" ></label>\n      <input className=\"filters__input\" id=\"name\" name=\"name\" type=\"text\" value={findCharacter} onChange={getCharacters} ></input>\n    </div>\n  )\n}\n\nFilters.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  findCharacter: PropTypes.string.isRequired\n}\n\nexport default Filters;","import React from 'react';\nimport './CharacterCard.scss';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n  const { character } = props\n  return (\n    <div className=\"card\">\n      <div className=\"card__information\" >\n        <h2 className=\"card__information__name\">{character.name}</h2>\n        <p className=\"card__information__species\">{character.species}</p>\n      </div>\n      <div className=\"card__container-image\" style={{ backgroundImage: `url(${character.image})` }}>\n        <img className=\"card__image\" src={character.image} alt={character.name} />\n      </div>\n    </div>\n  )\n}\n\nCharacterCard.propTypes = {\n  character: PropTypes.object.isRequired\n}\n\nexport default CharacterCard;","import React from 'react';\nimport './CharacterList.scss';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = props => {\n  const { characters, findCharacter } = props\n  return (\n    <ol className=\"main__list\">\n      {characters\n        .filter(myCharacter => myCharacter.name.toUpperCase().includes(findCharacter.toUpperCase()))\n        .map(character =>\n          <li key={character.id} className=\"main__list__element\">\n            <Link className=\"main__link\" to={`/detail/${character.id}`}>\n              <CharacterCard character={character} />\n            </Link>\n          </li>\n        )}\n    </ol>\n  )\n}\n\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  findCharacter: PropTypes.string.isRequired\n};\n\nexport default CharacterList;","import React from 'react';\nimport './CharacterDetail.scss'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n  const { characters, match } = props;\n  const characterId = parseInt(match.params.characterId);\n  const characterFind = characters.find(character => character.id === characterId);\n\n  if (characterFind) {\n    const { name, image, species, origin, episode, status } = characterFind;\n    return (\n      <div className=\"detail__container\">\n        <Link className=\"detail__link\" to=\"/\">Volver</Link>\n        <div className=\"detail__card\" >\n          <div className=\"detail__card__container-image\" style={{ backgroundImage: `url(${image})` }}>\n            <img className=\"detail__card__image\" src={image} alt={name} />\n          </div>\n          <div className=\"detail__card__information\" >\n            <h2 className=\"detail__card__information__name\" >{name}</h2>\n            <p className=\"detail__card__information__status\" >{`status: ${status}`} {(status === 'Dead') ? <i className=\"fas fa-skull-crossbones\"></i> : ''}</p>\n            <p className=\"detail__card__information__species\" >{`species:${species}`} {(species === 'Alien') ? <i className=\"fab fa-reddit-alien\"></i> : <i className=\"fas fa-user\"></i>}</p>\n            <p className=\"detail__card__information__origin\" >{`origin:${origin.name}`}</p>\n            <p className=\"detail__card__information__episodes\" >{`episodes:${episode.length}`}</p>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <React.Fragment>\n        <Link className=\"detail__link\" to=\"/\">Volver</Link>\n        <div>Ese personaje no existe</div>\n      </React.Fragment>\n    )\n  }\n}\n\nCharacterDetail.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  match: PropTypes.object.isRequired\n}\n\nexport default CharacterDetail;\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport logo from './images/Rick_and_Morty_-_logo.png';\nimport './App.scss';\nimport { fetchCharacters } from './services/fetchCharacters';\nimport Filters from './components/Filters';\nimport CharacterList from './components/CharacterList';\nimport CharacterDetail from './components/CharacterDetail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters: [],\n      findCharacter: '',\n    }\n\n    this.getCharacters = this.getCharacters.bind(this);\n  }\n\n  componentDidMount() {\n    fetchCharacters()\n      .then(data => {\n        this.setState({\n          characters: data.results,\n        });\n      })\n  }\n\n  getCharacters(event) {\n    const findCharacter = event.currentTarget.value;\n\n    this.setState({\n      findCharacter: findCharacter\n    })\n  }\n\n  render() {\n    const { characters, findCharacter } = this.state\n    return (\n      <div>\n        <header className=\"header\">\n          <h1 className=\"header__title\">Rick and Morty</h1>\n          <img className=\"header__logo\" src={logo} alt=\"logo Rick and Morty\" />\n        </header>\n        <main className=\"main\">\n          <Switch>\n            <Route exact path=\"/\" render={RouterProps => (\n              <React.Fragment>\n                <Filters match={RouterProps.match} getCharacters={this.getCharacters} findCharacter={findCharacter} />\n                <CharacterList match={RouterProps.match} characters={characters} findCharacter={findCharacter} />\n              </React.Fragment>\n            )}>\n            </Route>\n            <Route path=\"/detail/:characterId\" render={RouterProps => (\n              <CharacterDetail match={RouterProps.match} characters={characters} />\n            )}>\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const endpoint = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchCharacters = () => fetch(endpoint).then(response => response.json());\n\nexport { fetchCharacters }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}